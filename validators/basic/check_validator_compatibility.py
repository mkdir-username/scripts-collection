#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ SDUI
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –≤–µ—Ä—Å–∏–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –∏ –∏—Ö –∏–º–ø–æ—Ä—Ç
"""

import os
import sys
import importlib.util
from pathlib import Path

def check_file_exists(filepath):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    return os.path.isfile(filepath)

def check_module_import(filepath):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è"""
    try:
        spec = importlib.util.spec_from_file_location("validator", filepath)
        if spec and spec.loader:
            module = importlib.util.module_from_spec(spec)
            spec.loader.exec_module(module)
            return True, "OK"
    except Exception as e:
        return False, str(e)
    return False, "Unknown error"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    base_dir = Path(__file__).parent

    # –°–ø–∏—Å–æ–∫ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    validators = [
        # –û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è
        ("sdui_web_validator_v2.0.0_advanced_lines.py", "v2.0.0 (–û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è)"),

        # –§–∞–π–ª—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        ("sdui_web_validator.py", "v1.0.0 (–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)"),
        ("sdui_web_validator_new.py", "v1.1.0 (–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)"),
        ("sdui_web_validator_improved.py", "Improved (–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)"),
        ("sdui_web_validator_with_lines.py", "v1.2.0 (–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)"),

        # –ê—Ä—Ö–∏–≤–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
        ("validators/archive/sdui_web_validator_v1.0.0.py", "v1.0.0 (–ê—Ä—Ö–∏–≤)"),
        ("validators/archive/sdui_web_validator_v1.1.0.py", "v1.1.0 (–ê—Ä—Ö–∏–≤)"),
        ("validators/archive/sdui_web_validator_improved.py", "Improved (–ê—Ä—Ö–∏–≤)"),
        ("validators/archive/sdui_web_validator_v1.2.0_with_lines.py", "v1.2.0 (–ê—Ä—Ö–∏–≤)"),
    ]

    print("=" * 70)
    print("–ü–†–û–í–ï–†–ö–ê –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –í–ê–õ–ò–î–ê–¢–û–†–û–í SDUI")
    print("=" * 70)

    all_ok = True

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤:")
    print("-" * 70)

    for filename, description in validators:
        filepath = base_dir / filename
        exists = check_file_exists(filepath)
        status = "‚úÖ" if exists else "‚ùå"
        all_ok = all_ok and exists

        print(f"{status} {filename}")
        print(f"   {description}")
        if not exists:
            print(f"   ‚ö†Ô∏è  –§–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
        print()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π:")
    print("-" * 70)

    for filename, description in validators:
        filepath = base_dir / filename
        if check_file_exists(filepath):
            success, message = check_module_import(filepath)
            status = "‚úÖ" if success else "‚ö†Ô∏è"

            print(f"{status} {filename}")
            if not success:
                print(f"   –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {message[:100]}...")
                all_ok = False
        print()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
    print("\nüìú –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤:")
    print("-" * 70)

    scripts = [
        ("run_validator_with_clear.sh", "sdui_web_validator_v2.0.0_advanced_lines.py"),
        (".vscode/tasks.json", "sdui_web_validator_v2.0.0_advanced_lines.py"),
    ]

    for script, expected_validator in scripts:
        script_path = base_dir / script
        if script_path.exists():
            content = script_path.read_text()
            if expected_validator in content:
                print(f"‚úÖ {script} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç {expected_validator}")
            else:
                print(f"‚ö†Ô∏è  {script} –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–∂–∏–¥–∞–µ–º—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä")
                all_ok = False
        else:
            print(f"‚ùå {script} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_ok = False

    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print("\n" + "=" * 70)
    if all_ok:
        print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("–°–∏—Å—Ç–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º–∞.")
    else:
        print("‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤—ã—à–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.")
    print("=" * 70)

    return 0 if all_ok else 1

if __name__ == "__main__":
    sys.exit(main())