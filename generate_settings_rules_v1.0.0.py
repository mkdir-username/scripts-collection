#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä json.schemas –ø—Ä–∞–≤–∏–ª –¥–ª—è .vscode/settings.json
–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –ø—É—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ LayoutElementContent.json
"""
import json
import re
from pathlib import Path

SDUI_ROOT = Path("/Users/username/Documents/front-middle-schema")
LAYOUT_CONTENT = SDUI_ROOT / "SDUI/common/LayoutElement/LayoutElementContent.json"

def extract_component_paths():
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ $ref –ø—É—Ç–∏ –∏–∑ LayoutElementContent"""
    with open(LAYOUT_CONTENT, 'r', encoding='utf-8') as f:
        data = json.load(f)

    components = []

    if 'oneOf' in data:
        for item in data['oneOf']:
            if '$ref' in item and 'value' in item:
                ref_path = item['$ref']
                component_name = item['value']

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º file:// –ø—É—Ç—å –≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π
                # file:///Users/username/Documents/front-middle-schema/SDUI/...
                # ‚Üí ./SDUI/...
                relative_path = ref_path.replace(
                    'file:///Users/username/Documents/front-middle-schema/',
                    './'
                )

                components.append({
                    'name': component_name,
                    'path': relative_path
                })

    return components

def generate_schema_rules(components):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è json.schemas"""
    rules = []

    for comp in components:
        rule = {
            "fileMatch": [
                f"**/{comp['name']}/**/*.json",
                f"**/{comp['name']}.json",
                f"**/*{comp['name']}*.json"
            ],
            "url": comp['path']
        }
        rules.append(rule)

    return rules

def main():
    print("üîç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ LayoutElementContent.json...\n")

    components = extract_component_paths()
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(components)} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n")

    schema_rules = generate_schema_rules(components)

    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (.JSON —Ñ–∞–π–ª–æ–≤ —Å rootElement)
    # –û–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º, —á—Ç–æ–±—ã —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥—Ä—É–≥–∏–µ –Ω–µ –ø–æ–¥–æ—à–ª–∏
    schema_rules.append({
        "fileMatch": [".JSON/**/*.json"],
        "url": "./SDUI/common/LayoutElement/LayoutElementContent.json"
    })

    output = {
        "json.schemas": schema_rules
    }

    output_path = SDUI_ROOT / "Scripts/settings_schemas_rules.json"
    with open(output_path, 'w', encoding='utf-8') as f:
        json.dump(output, f, indent=2, ensure_ascii=False)
        f.write('\n')

    print(f"üìù –°–æ–∑–¥–∞–Ω–æ {len(schema_rules)} –ø—Ä–∞–≤–∏–ª")
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {output_path}")
    print("\nüí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –º–∞—Å—Å–∏–≤ json.schemas –≤ .vscode/settings.json")

    # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 3 –ø—Ä–∏–º–µ—Ä–∞
    print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª:")
    for rule in schema_rules[:3]:
        print(f"\n  {rule['fileMatch'][1]} ‚Üí {rule['url']}")

if __name__ == "__main__":
    main()