{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SDUI Universal Schema with VS Code IntelliSense",
  "description": "Единая схема для всех SDUI JSON: контрактов, экранов и компонентов",
  "oneOf": [
    {
      "$ref": "#/definitions/SDUIContract"
    },
    {
      "$ref": "#/definitions/AnyComponent"
    }
  ],
  "definitions": {
    "SDUIContract": {
      "type": "object",
      "required": [
        "rootElement"
      ],
      "properties": {
        "$schema": {
          "type": "string",
          "description": "Ссылка на JSON Schema"
        },
        "version": {
          "type": "integer",
          "description": "Версия контракта"
        },
        "rootElement": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Корневой элемент UI (должен содержать type)"
        },
        "data": {
          "type": "object",
          "description": "Статические данные контракта",
          "additionalProperties": true
        },
        "state": {
          "type": "object",
          "description": "Состояние контракта (runtime переменные)",
          "additionalProperties": true
        },
        "computed": {
          "type": "object",
          "description": "Вычисляемые свойства",
          "additionalProperties": true
        },
        "metadata": {
          "type": "object",
          "description": "Метаданные контракта",
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "AnyComponent": {
      "oneOf": [
        {
          "$ref": "#/definitions/AccordionWrapper"
        },
        {
          "$ref": "#/definitions/AccountContent"
        },
        {
          "$ref": "#/definitions/AdCardView"
        },
        {
          "$ref": "#/definitions/AlertView"
        },
        {
          "$ref": "#/definitions/BannerWrapper"
        },
        {
          "$ref": "#/definitions/ButtonView"
        },
        {
          "$ref": "#/definitions/CardIconStackView"
        },
        {
          "$ref": "#/definitions/CardIconView"
        },
        {
          "$ref": "#/definitions/CarouselWrapper"
        },
        {
          "$ref": "#/definitions/ChevronWrapper"
        },
        {
          "$ref": "#/definitions/ChipsStackView"
        },
        {
          "$ref": "#/definitions/CircleProgressIcon"
        },
        {
          "$ref": "#/definitions/ClickWrapper"
        },
        {
          "$ref": "#/definitions/ConstraintWrapper"
        },
        {
          "$ref": "#/definitions/CustomView"
        },
        {
          "$ref": "#/definitions/DataContent"
        },
        {
          "$ref": "#/definitions/DataStackView"
        },
        {
          "$ref": "#/definitions/DataView"
        },
        {
          "$ref": "#/definitions/ErrorLoadingView"
        },
        {
          "$ref": "#/definitions/FigmaFrame"
        },
        {
          "$ref": "#/definitions/HorizontalCarouselWrapper"
        },
        {
          "$ref": "#/definitions/HorizontalHistogramView"
        },
        {
          "$ref": "#/definitions/HorizontalListWrapper"
        },
        {
          "$ref": "#/definitions/HorizontalProgressView"
        },
        {
          "$ref": "#/definitions/IconView"
        },
        {
          "$ref": "#/definitions/ImageView"
        },
        {
          "$ref": "#/definitions/IndexContainerWrapper"
        },
        {
          "$ref": "#/definitions/IndicatorView"
        },
        {
          "$ref": "#/definitions/LabelView"
        },
        {
          "$ref": "#/definitions/MarkdownView"
        },
        {
          "$ref": "#/definitions/MultiLinearGraphView"
        },
        {
          "$ref": "#/definitions/PageIndicatorBulletView"
        },
        {
          "$ref": "#/definitions/PageIndicatorRunnerView"
        },
        {
          "$ref": "#/definitions/PageIndicatorStepView"
        },
        {
          "$ref": "#/definitions/ProgressBarView"
        },
        {
          "$ref": "#/definitions/RectangleView"
        },
        {
          "$ref": "#/definitions/ReferralBonusView"
        },
        {
          "$ref": "#/definitions/ReplaceWrapper"
        },
        {
          "$ref": "#/definitions/RightIconWrapper"
        },
        {
          "$ref": "#/definitions/ScrollWrapper"
        },
        {
          "$ref": "#/definitions/SelectionWrapper"
        },
        {
          "$ref": "#/definitions/SkeletonView"
        },
        {
          "$ref": "#/definitions/Slider"
        },
        {
          "$ref": "#/definitions/Spacer"
        },
        {
          "$ref": "#/definitions/SpinnerView"
        },
        {
          "$ref": "#/definitions/SquareWrapper"
        },
        {
          "$ref": "#/definitions/StackView"
        },
        {
          "$ref": "#/definitions/StackWrapper"
        },
        {
          "$ref": "#/definitions/StepView"
        },
        {
          "$ref": "#/definitions/SwipeContextWrapper"
        },
        {
          "$ref": "#/definitions/SwitchView"
        },
        {
          "$ref": "#/definitions/TagView"
        },
        {
          "$ref": "#/definitions/TextField"
        },
        {
          "$ref": "#/definitions/TextView"
        },
        {
          "$ref": "#/definitions/VerticalListWrapper"
        }
      ]
    },
    "AccordionWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "AccordionWrapper",
          "description": "Компонент AccordionWrapper"
        },
        "topContent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Верхняя часть контента"
        },
        "expandedContent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Контент, который появляется при раскрытия аккордеона"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "AccountContent": {
      "type": "object",
      "properties": {
        "type": {
          "const": "AccountContent",
          "description": "Компонент AccountContent"
        },
        "title": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Название счёта. По-умолчанию цвет textColorPrimary"
        },
        "subtitle": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Подзаголовок счёта. По-умолчанию цвет textColorSecondary"
        },
        "balance": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Баланс по счёту. По-умолчанию цвет textColorPrimary"
        },
        "percent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Процент по счёту. По-умолчанию цвет textColorPrimary"
        },
        "description": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Описание счёта. По-умолчанию цвет textColorSecondary"
        },
        "status": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Статус счёта. По-умолчанию цвет textColorNegative"
        },
        "icon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка слева от текста с процентами"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "AdCardView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "AdCardView",
          "description": "Компонент AdCardView"
        },
        "mainContent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Контент карточки без картинки"
        },
        "topPadding": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Верхний отступ карточки от границы контейнера"
        },
        "graphic": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Картинка карточки"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "AlertView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "AlertView",
          "description": "Компонент AlertView"
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "default": "custom",
          "description": "Название пресета AlertView."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "BannerWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "BannerWrapper",
          "description": "Компонент BannerWrapper"
        },
        "content": {
          "$ref": "#/definitions/AnyComponent"
        },
        "contentInteractionEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Флаг, необходимый ios для взаимодействия с контентом"
        },
        "contentEnabledState": {
          "type": "boolean",
          "default": true,
          "description": "Флаг, необходимый ios для выключенного состояния враппера"
        },
        "style": {
          "$ref": "#/definitions/Style",
          "description": "Пресет для стиля, по умолчанию fill"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона, по умолчанию backgroundColorSecondary"
        },
        "backgroundColorHighlighted": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона при нажатии, по умолчанию backgroundColorTertiary"
        },
        "borderColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет обводки"
        },
        "margins": {
          "$ref": "#/definitions/AnyComponent",
          "description": "DEPRECATED! Внешние отступы для враппера"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ButtonView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ButtonView",
          "description": "Компонент ButtonView"
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "default": "custom",
          "description": "Название пресета ButtonView."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "CardIconStackView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "CardIconStackView",
          "description": "Компонент CardIconStackView"
        },
        "productItem": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Продукт, находящийся в стэке"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "CardIconView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "CardIconView",
          "description": "Компонент CardIconView"
        },
        "showShadow": {
          "type": "boolean",
          "description": "Флаг отображения тени на продукте"
        },
        "overlay": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Подложка продукта"
        },
        "details": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Детали о продукте и его владельце"
        },
        "cover": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Рубашка продукта"
        },
        "icon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Модель иконки поверх продукта"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "CarouselWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "CarouselWrapper",
          "description": "Компонент CarouselWrapper"
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        },
        "scaling": {
          "type": "boolean",
          "description": "Высота боковых элементов: в состоянии true левый и правый элемент приобретают высоту равную 80% от центрального элемента"
        },
        "transparency": {
          "type": "boolean",
          "description": "Прозрачность боковых элементов: в состоянии true левый и правый элемент приобретают прозрачность равную 30% от центрального элемента"
        },
        "pageControlPosition": {
          "$ref": "#/definitions/PageControlPosition",
          "description": "Режим отображения Page Control элемента. Важно: в режиме .none параметр gap игнорируется"
        },
        "sideItemPlacement": {
          "$ref": "#/definitions/AnyComponent",
          "default": "xxxl",
          "description": "Ширина видимой части правого и левого элементов коллекции"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона"
        },
        "corners": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Радиусы скругления углов"
        },
        "interItemSpacing": {
          "$ref": "#/definitions/AnyComponent",
          "default": "xs",
          "description": "Расстояние между элементами"
        },
        "gap": {
          "$ref": "#/definitions/AnyComponent",
          "default": "m",
          "description": "Расстояние между контентом и Page Control"
        },
        "initialItemIndex": {
          "type": "number",
          "default": 0,
          "description": "Индекс элемента, до которого сработает невидимый автоматический скрол. Важно: при инвалидном индексе - компонент не отобразится"
        },
        "itemCollectionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив отображаемых компонентов в области контента. Важно: при пустом массиве - компонент не отобразится"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ChevronWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ChevronWrapper",
          "description": "Компонент ChevronWrapper"
        },
        "titleView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Контент в свёрнутом состоянии компонента"
        },
        "collapsibleView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Дополнительный контент в развёрнутом состоянии компонента"
        },
        "wholeViewClickable": {
          "type": "boolean",
          "default": true,
          "description": "Раскрытие компонента по нажатию в любое место(true)/на шеврон(false)"
        },
        "collapsed": {
          "type": "boolean",
          "default": false,
          "description": "Начальное состояние компонента развернутое (false) / свернутое (true)"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ChipsStackView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ChipsStackView",
          "description": "Компонент ChipsStackView"
        },
        "isMultiline": {
          "type": "boolean",
          "description": "Расположение элементов на экране: в один ряд, либо в несколько строк с переносом"
        },
        "alignment": {
          "$ref": "#/definitions/Alignment",
          "description": "Выравнивание элементов на экране: слева или справа"
        },
        "chipsStack": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив с чипсами, состоящий из ButtonViewV2. Должен приходить как LayoutElement, т.к. appearance находится в нём"
        },
        "title": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Тайтл чипс-вью"
        },
        "subtitle": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Сабтайтл чипс-вью."
        },
        "focusItem": {
          "type": "integer",
          "description": "Индекс выбранного элемента Chip для осуществления центрирования по выбранному элементу"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "CircleProgressIcon": {
      "type": "object",
      "properties": {
        "type": {
          "const": "CircleProgressIcon",
          "description": "Компонент CircleProgressIcon"
        },
        "progress": {
          "type": "number",
          "description": "Текущий прогресс в процентах, диапазон [0,100]"
        },
        "size": {
          "$ref": "#/definitions/Size",
          "default": "medium",
          "description": "Размер прогресса, по умолчанию medium"
        },
        "fill": {
          "$ref": "#/definitions/Fill",
          "description": "Заливка центра прогресса, по умолчанию none"
        },
        "content": {
          "$ref": "#/definitions/AnyComponent"
        },
        "progressColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет прогресса, по умолчанию graphicColorPositive"
        },
        "stroke": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Подложка прогресса, по умолчанию none"
        },
        "direction": {
          "$ref": "#/definitions/Direction",
          "description": "Направление выполнения прогресса, по умолчанию clockwise"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ClickWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ClickWrapper",
          "description": "Компонент ClickWrapper"
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "default": "full",
          "description": "Название пресета ClickWrapper."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ConstraintWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ConstraintWrapper",
          "description": "Компонент ConstraintWrapper"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Вложенные элементы"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "CustomView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "CustomView",
          "description": "Компонент CustomView"
        },
        "customViewKey": {
          "$ref": "#/definitions/CustomViewKey",
          "description": "Ключ идентификации конкретной реализации"
        },
        "element": {
          "type": "object",
          "format": "JsonElement",
          "description": "Элемент в виде json-а. Парсится конкретной фичей, где используется данный элемент."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "DataContent": {
      "type": "object",
      "properties": {
        "type": {
          "const": "DataContent",
          "description": "Компонент DataContent"
        },
        "firstLineGroup": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметры и свойства для первой линии с контентом."
        },
        "secondLineGroup": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметры и свойства для второй линии с контентом."
        },
        "thirdLineGroup": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметры и свойства для третьей линии с контентом."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "DataStackView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "DataStackView",
          "description": "Компонент DataStackView"
        },
        "iconView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка сверху"
        },
        "resizeMode": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Поведение стека на растягивание"
        },
        "title": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст под иконкой"
        },
        "subtitle": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст между двумя лейблами"
        },
        "extraSubtitle": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст снизу"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "DataView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "DataView",
          "description": "Компонент DataView"
        },
        "dataContent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Объект с текстом"
        },
        "iconView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка слева"
        },
        "indicatorView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Индикатор справа"
        },
        "contentAndIconAlignment": {
          "$ref": "#/definitions/VerticalAlignment",
          "description": "Вертикальное выравнивание иконки и контента"
        },
        "indicatorAlignment": {
          "$ref": "#/definitions/VerticalAlignment",
          "default": "leading",
          "description": "Вертикальное выравнивание индикатора"
        },
        "extraPaddings": {
          "type": "boolean",
          "default": true,
          "description": "Отступы вокруг компонента. Ознакомьтесь внимательно с adoc по этому полю."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ErrorLoadingView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ErrorLoadingView",
          "description": "Компонент ErrorLoadingView"
        },
        "message": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст ошибки"
        },
        "icon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка справа"
        },
        "height": {
          "type": "number",
          "description": "Высота"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "FigmaFrame": {
      "type": "object",
      "properties": {
        "type": {
          "const": "FigmaFrame",
          "description": "Компонент FigmaFrame"
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "default": "full",
          "description": "Название пресета FigmaFrame"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "HorizontalCarouselWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "HorizontalCarouselWrapper",
          "description": "Компонент HorizontalCarouselWrapper"
        },
        "snapPosition": {
          "$ref": "#/definitions/SnapPosition",
          "description": "Позиция куда встает активная карточка. Значение по умолчанию — start."
        },
        "itemsGap": {
          "type": "number",
          "description": "Расстояние между элементами внутри слоя ItemsList. Значение по умолчанию — 8."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Список элементов, которые отображаются в carouselWrapper."
        },
        "resizingMode": {
          "$ref": "#/definitions/AnyComponent",
          "description": "fill - растягивает центральный блок с элементами на всю ширину. fixed - позволяет задать фиксированный размер, который применится к каждому элементу коллекции. Значеение по умолчанию - fill"
        },
        "itemsPaddings": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Левый и правый паддинг влияет на ширину видимых элементов коллекции. А также верхний и нижний паддинг сжимает контент по высоте. Значение по умолчанию — VerticalPaddings 0, HorizontalPaddings 20"
        },
        "currentIndex": {
          "type": "integer",
          "description": "Параметр отвечает за индекс активного элемента item. Если задать индекс, карусель автоматически прокрутится до элемента item с этим индексом. Параметр принимает любые значения от 0 до +∞. Значение по умолчанию — 0."
        },
        "withScrollAnimation": {
          "type": "boolean",
          "description": "Параметр отвечает за наличие анимации при автоматической прокрутке к определённому индексу. Если значение true — прокрутка происходит с анимацией, если false — без анимации. Значение по умолчанию — true."
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "HorizontalHistogramView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "HorizontalHistogramView",
          "description": "Компонент HorizontalHistogramView"
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив отображаемых сегментов"
        },
        "height": {
          "type": "number",
          "description": "Высота гистограммы"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "HorizontalListWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "HorizontalListWrapper",
          "description": "Компонент HorizontalListWrapper"
        },
        "itemsGap": {
          "type": "number",
          "description": "Гэп между элементами. В фигме задаётся на слое ItemsList. Значение по умолчанию - 8"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Список элементов, которые отображаются в списке"
        },
        "visibleItemsCount": {
          "type": "integer",
          "description": "Параметр определяет, сколько карточек одновременно отображается в ширину компонента, деля пространство поровну.Ширина карточки расчитывается по формуле: (Component Width -  (LeftPadding + RightPadding) - (LeftItemsPadding+ RightItemsPadding) - Gap*(VisiableItemsCount-1)) / VisiableItemsCount. Принимает значения от 1 и больше, все значения меньше 1 выключает параметр"
        },
        "itemsPaddings": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметр добавляет контентные паддинги. Левый паддинг отображается в начале списка, правый паддинг в конце списка, а так же паддинги сверху и снизу. В фигме задаётся на слое ItemsList. Значение по умолчанию - 0"
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "HorizontalProgressView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "HorizontalProgressView",
          "description": "Компонент HorizontalProgressView"
        },
        "title": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Заголовок"
        },
        "subtitle": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Подзаголовок"
        },
        "progressBarView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Визуальное отображение прогресса"
        },
        "margins": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Внешние отступы"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "IconView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "IconView",
          "description": "Компонент IconView"
        },
        "icon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "default": "transparent",
          "description": "Цвет фона, по умолчанию transparent"
        },
        "backgroundIcon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка для фона"
        },
        "size": {
          "$ref": "#/definitions/AnyComponent",
          "default": "small",
          "description": "Размер иконки, по умолчанию small"
        },
        "shape": {
          "$ref": "#/definitions/AnyComponent",
          "default": "noshape",
          "description": "Форма иконки, по умолчанию noshape"
        },
        "initials": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Инициалы вместо иконки"
        },
        "stroke": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Тип обводки иконки"
        },
        "topSubicon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Icon в правом-верхнем углу"
        },
        "topSubiconBackgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона для Icon в правом-верхнем углу, по умолчанию specialBackgroundColorPrimaryGrouped"
        },
        "indicatorView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "IndicatorView в правом-верхнем углу"
        },
        "bottomSubicon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Icon в правом-нижнем углу"
        },
        "bottomSubiconBackgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона для Icon в правом-нижнем углу, по умолчанию specialBackgroundColorPrimaryGrouped"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ImageView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ImageView",
          "description": "Компонент ImageView"
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "default": "full",
          "description": "Название пресета ImageView."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "IndexContainerWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "IndexContainerWrapper",
          "description": "Компонент IndexContainerWrapper"
        },
        "indexProvider": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Элемент, который должен предоставлять текущий индекс контента"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив элементов, отображаемые по индексу"
        },
        "contentPosition": {
          "$ref": "#/definitions/ContentPosition",
          "description": "Настраивает отображение контента по вертикали относительно провайдера индекса"
        },
        "spacing": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Отступ между контентом и индекс провайдером"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "IndicatorView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "IndicatorView",
          "description": "Компонент IndicatorView"
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "default": "full",
          "description": "Название пресета IndicatorView."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "LabelView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "LabelView",
          "description": "Компонент LabelView"
        },
        "text": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст"
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Горизонтальное выравнивание: по умолчанию применяется HorizontalAlignment: left"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "MarkdownView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "MarkdownView",
          "description": "Компонент MarkdownView"
        },
        "text": {
          "type": "string",
          "description": "Текст"
        },
        "padding": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Отступы"
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/AnyComponent",
          "default": "left",
          "description": "Горизонтальное выравнивание"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "MultiLinearGraphView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "MultiLinearGraphView",
          "description": "Компонент MultiLinearGraphView"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Линии графика"
        },
        "xAxisConfig": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Настройка оси Х"
        },
        "horizontalVisibleScope": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Область видимости по горизонтали. По умолчанию подстраивается под массив точек на графике."
        },
        "horizontalLimitLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Лимит-линии графика, параллельные оси Х"
        },
        "xAxisLabelFormatter": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Форматтер для лейблов оси Х"
        },
        "yAxisLabelFormatter": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Форматтер для лейблов оси Y"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "PageIndicatorBulletView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "PageIndicatorBulletView",
          "description": "Компонент PageIndicatorBulletView"
        },
        "countOfIndicators": {
          "type": "integer",
          "default": 10,
          "description": "Параметр, определяющий количество элементов в pageIndicator: от 1 до 10. Значение по умолчанию – 10"
        },
        "selectedIndicator": {
          "type": "integer",
          "default": 0,
          "description": "Параметр, определяющий индекс выбранного элемента: от 0 до 9. Значение по умолчанию – 0"
        },
        "gap": {
          "type": "number",
          "default": 8,
          "description": "Параметр, определяющий расстояние между индикаторами. Значение по умолчанию – 8"
        },
        "indicatorColor": {
          "$ref": "#/definitions/AnyComponent",
          "default": "neutralTranslucentColor200",
          "description": "Параметр, определяющий цвет основных индикаторов. Значение по умолчанию – neutralTranslucentColor200"
        },
        "selectedIndicatorColor": {
          "$ref": "#/definitions/AnyComponent",
          "default": "accentColorSecondary",
          "description": "Параметр, определяющий цвет выбранного индикатора. Значение по умолчанию – accentColorSecondary"
        },
        "selectedIndicatorHeight": {
          "type": "number",
          "default": 8,
          "description": "Параметр, определяющий размер индикаторов. Значение по умолчанию – 8"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "PageIndicatorRunnerView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "PageIndicatorRunnerView",
          "description": "Компонент PageIndicatorRunnerView"
        },
        "countOfIndicators": {
          "type": "integer",
          "description": "Параметр, определяющий количество элементов в pageIndicator: от 1 до 10Значение по умолчанию – 10"
        },
        "selectedIndicator": {
          "type": "integer",
          "description": "Параметр, определяющий индекс выбранного элемента: от 0 до 10Значение по умолчанию – 0"
        },
        "indicatorCorners": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметр, определяющий скругления у дефолтного индикатораЗначение по умолчанию – 2"
        },
        "indicatorColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет дефолтного индикатораЗначение по умолчанию – neutral-translucent/200"
        },
        "selectedIndicatorCorners": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметр, определяющий скругления у дефолтного индикатораЗначение по умолчанию – 2"
        },
        "selectedIndicatorColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет выбранного индикатораЗначение по умолчанию – accent/secondary"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "PageIndicatorStepView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "PageIndicatorStepView",
          "description": "Компонент PageIndicatorStepView"
        },
        "countOfIndicators": {
          "type": "integer",
          "description": "Параметр, определяющий количество элементов в pageIndicator: от 1 до 10. Значение по умолчанию – 10"
        },
        "selectedIndicator": {
          "type": "integer",
          "description": "Параметр, определяющий индекс выбранного элемента: от 0 до 9. Значение по умолчанию – 0"
        },
        "gap": {
          "type": "number",
          "description": "Параметр, определяющий расстояние между индикаторами. Значение по умолчанию – 8"
        },
        "indicatorCorners": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Скругление углов основных индикаторов"
        },
        "indicatorColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметр, определяющий цвет основных индикаторов. Значение по умолчанию – neutralTranslucentColor200"
        },
        "selectedIndicatorCorners": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Скругление углов выбранного индикатора"
        },
        "selectedIndicatorColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметр, определяющий цвет выбранного индикатора. Значение по умолчанию – accentColorSecondary"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ProgressBarView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ProgressBarView",
          "description": "Компонент ProgressBarView"
        },
        "titles": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Заголовки под линией прогресса с стилями для шрифта, цвета и признаком многострочности."
        },
        "bar": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Линия прогресса. Состоит из сегментов, между которыми может быть или не быть расстояние. Сегменты растягиваются по ширине вьюхи."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "RectangleView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "RectangleView",
          "description": "Компонент RectangleView"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона плитки. На клиентах используется backgroundColorSecondary, если не получилось распарсить цвет"
        },
        "badgeIcon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка для отображения какого-либо признака в правом верхнем углу плитки"
        },
        "badgeBackgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона бейджа для иконки в правом верхнем углу плитки"
        },
        "soloIcon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Логотип в нижнем правом углу плитки в случае, когда он один"
        },
        "icons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив логотипов в нижнем правом углу плитки. Используется, когда логотипов больше 1. Логотипов не может быть > 5. Shape всегда будет circle"
        },
        "image": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Фоновая картинка для плитки. Может быть прислана, если плитка достаточно большая, чтобы картинка не мешала отображаемому тексту"
        },
        "topDataContent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Верхняя область для отображения текстовой информации на плитке"
        },
        "bottomDataContent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Нижняя область для отображения текстовой информации на плитке"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ReferralBonusView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ReferralBonusView",
          "description": "Компонент ReferralBonusView"
        },
        "dataContent": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Объект с текстами"
        },
        "iconView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка справа"
        },
        "timerText": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст"
        },
        "timerBackgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона, по умолчанию staticGraphicColorFrenchLilac"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ReplaceWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ReplaceWrapper",
          "description": "Компонент ReplaceWrapper"
        },
        "animation": {
          "$ref": "#/definitions/Animation",
          "default": "instant",
          "description": "Определяет вид анимации при переходе между контентом."
        },
        "item": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Контент, который можно заменить на любой даже локальный компонент"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "RightIconWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "RightIconWrapper",
          "description": "Компонент RightIconWrapper"
        },
        "content": {
          "$ref": "#/definitions/AnyComponent"
        },
        "iconView": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка справа"
        },
        "padding": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Внешние отступы"
        },
        "spacing": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Отступ между контентом и иконкой"
        },
        "iconAction": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Действие, которое будет исполнено при нажатии на иконку"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "ScrollWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "ScrollWrapper",
          "description": "Компонент ScrollWrapper"
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        },
        "isFillViewport": {
          "type": "boolean",
          "description": "Флаг определяющий должен ли content растягиваться, чтобы заполнить всю доступную область. По дефолту false. Только для android"
        },
        "axis": {
          "$ref": "#/definitions/Axis",
          "description": "Направление оси"
        },
        "showAxisScrollIndicator": {
          "type": "boolean",
          "default": true,
          "description": "Настройка отображения индикатора скролла на оси. Только для iOS и Web"
        },
        "content": {
          "$ref": "#/definitions/AnyComponent"
        },
        "shouldScrollToEnd": {
          "type": "boolean",
          "default": false,
          "description": "Флаг для автоматического проскролла в конец списка"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "SelectionWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "SelectionWrapper",
          "description": "Компонент SelectionWrapper"
        },
        "isSelected": {
          "type": "boolean",
          "default": false,
          "description": "Отображение выбранного и невыбранного состояния компонента. Значение по умолчанию – false"
        },
        "isEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Отображение состояния доступного и недоступного для нажатия компонента. Значение по умолчанию – true"
        },
        "item": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Контентная часть компонента"
        },
        "highlightedEffectColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметр отвечает за настройку цвета области, которая накладывается поверх всего содержимого компонента во время зажатия, цвет применяется с 20% прозрачности. Значение по умолчанию - NeutralTranslucentColor400"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "SkeletonView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "SkeletonView",
          "description": "Компонент SkeletonView"
        },
        "skeletonViewPreset": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Пресет скелетона"
        },
        "color": {
          "$ref": "#/definitions/AnyComponent",
          "default": "specialBackgroundColorPrimaryGrouped",
          "description": "Цвет скелетона. По умолчанию используется specialBackgroundColorPrimaryGrouped"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "Slider": {
      "type": "object",
      "properties": {
        "type": {
          "const": "Slider",
          "description": "Компонент Slider"
        },
        "isEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Отображение состояния доступного и недоступного для нажатия компонента"
        },
        "currentValue": {
          "type": "number",
          "description": "Текущее значение слайдера. Значение по умолчанию 0.5"
        },
        "leftValue": {
          "type": "number",
          "description": "Значение слева на треке. Обычно минимальное значение. Значение по умолчанию 0"
        },
        "rightValue": {
          "type": "number",
          "description": "Значение справа на треке. Обычно максимальное значение. Значение по умолчанию 1"
        },
        "knobAppearance": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Визуальные свойства кноба."
        },
        "knobSize": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Высота и ширина кноба. Минимальные значения 0. Значение по умолчанию 16x16"
        },
        "knobDiscreteBehaviour": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Тип перемещения кноба. Если параметр не заполнен, то кноб перемещается по треку плавно, не дискретно"
        },
        "trackAppearance": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Визуальные свойства трэка слайдера."
        },
        "trackHeight": {
          "type": "number",
          "description": "Высота бэграунда у слайдера. Минимальное значение 0. Значение по умолчанию 4"
        },
        "selectedTrackAppearance": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Визуальные свойства активной части трэка слайдера. Значение по умолчанию – accent/primary"
        },
        "dots": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Отображение точек на слайдере. "
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "Spacer": {
      "type": "object",
      "properties": {
        "type": {
          "const": "Spacer",
          "description": "Компонент Spacer"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "SpinnerView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "SpinnerView",
          "description": "Компонент SpinnerView"
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "default": "full",
          "description": "Название пресета Spinner"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "SquareWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "SquareWrapper",
          "description": "Компонент SquareWrapper"
        },
        "content": {
          "$ref": "#/definitions/AnyComponent"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона, по умолчанию backgroundColorSecondary"
        },
        "backgroundIcon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Иконка для фона"
        },
        "description": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст внизу"
        },
        "subDescription": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Дополнительный текст внизу"
        },
        "icons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив иконок в правом нижнем углу"
        },
        "iconShape": {
          "$ref": "#/definitions/IconShape",
          "description": "Форма иконок в правом нижнем углу, по умолчанию noshape"
        },
        "size": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Сущность, которая позволяет задать размер элементу"
        },
        "sizeMode": {
          "$ref": "#/definitions/SizeMode",
          "description": "Форма компонента, по умолчанию square"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "StackView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "StackView",
          "description": "Компонент StackView"
        },
        "axis": {
          "$ref": "#/definitions/Axis",
          "description": "Ось по которой располагются дочернии элементы"
        },
        "alignment": {
          "$ref": "#/definitions/Alignment",
          "description": "Выравнивание элементов относительно основной оси"
        },
        "distribution": {
          "$ref": "#/definitions/Distribution",
          "default": "default",
          "description": "Стратегия вычисления размеров дочерних элементов вдоль оси представления. default - игнорирует параметр weight из LayoutElement, использует size. weighted - размеры рассчитываются пропорционально полю weight, если поле не пришло используются size(для таких вью поведение будет как default)"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив дочерних элементов"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона"
        },
        "padding": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Отступ дочерних элементов от краев стека"
        },
        "corners": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Радиусы скругления углов"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "StackWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "StackWrapper",
          "description": "Компонент StackWrapper"
        },
        "axis": {
          "$ref": "#/definitions/Axis",
          "description": "Ось, по которой располагаются дочерние элементы"
        },
        "alignment": {
          "$ref": "#/definitions/Alignment",
          "description": "Выравнивание элементов относительно основной оси"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив дочерних элементов"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "StepView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "StepView",
          "description": "Компонент StepView"
        },
        "axis": {
          "$ref": "#/definitions/Axis",
          "description": "Выравнивание внутренних элементов компонента: по вертикальной или горизонтальной оси"
        },
        "graphic": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Тип элемента графики, расположенный между двумя трэками"
        },
        "firstTrack": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметры для FirstTrack. Если их нет, то трек не отображается"
        },
        "secondTrack": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Параметры для SecondTrack. Если их нет, то трек не отображается"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "SwipeContextWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "SwipeContextWrapper",
          "description": "Компонент SwipeContextWrapper"
        },
        "contextItemsPosition": {
          "$ref": "#/definitions/ActionsViewPosition",
          "description": "Параметр определяет, с какой стороны будут изначально отображаться контекстные действия. Значение Hide скрывает все действия, показывая только содержимое ячейки без предварительно открытых контекстных действий. Значение по умолчанию = hide"
        },
        "transitionType": {
          "$ref": "#/definitions/TransitionType",
          "description": "Параметр описывает как трансформируются и появляются контекстные действия при свайпе ячейки. Значение по умолчанию — pushSlideIn"
        },
        "gap": {
          "type": "number",
          "description": "Расстояние между ячейкой и контекстными действиями. Значение по умолчанию — 0"
        },
        "cell": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Контент ячейки"
        },
        "leftAddon": {
          "$ref": "#/definitions/AnyComponent"
        },
        "rightAddon": {
          "$ref": "#/definitions/AnyComponent"
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "SwitchView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "SwitchView",
          "description": "Компонент SwitchView"
        },
        "isSelected": {
          "type": "boolean",
          "default": false,
          "description": "Отображение состояния выбранного компонента"
        },
        "isEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Отображение состояния доступного и недоступного для нажатия компонента"
        },
        "backgroundShape": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Группа определяет визуальные и функциональные характеристики фигуры, по которой движется Knob, включая отступы и appearance"
        },
        "knobShape": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Группа определяет визуальные и функциональные характеристики Knob’а, включая его размеры и appearance"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "TagView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "TagView",
          "description": "Компонент TagView"
        },
        "leftAddon": {
          "$ref": "#/definitions/AnyComponent"
        },
        "title": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст"
        },
        "titlePaddings": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Отступы у текста"
        },
        "rightAddon": {
          "$ref": "#/definitions/AnyComponent"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона"
        },
        "corners": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Радиусы скругления углов"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "TextField": {
      "type": "object",
      "properties": {
        "type": {
          "const": "TextField",
          "description": "Компонент TextField"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Состояние доступного и недоступного для нажатия компонента. Значение по умолчанию – True"
        },
        "focusMode": {
          "$ref": "#/definitions/FocusMode",
          "description": "Состояние компонента в фокусе (активированном), характеризуемое наличием объекта Cursor. Значение по умолчанию – Auto"
        },
        "isSecured": {
          "type": "boolean",
          "description": "Скрытие контента, введённого в Value, за счёт символов безопасности. Значение по умолчанию – False"
        },
        "textAlignment": {
          "$ref": "#/definitions/TextAlignment",
          "description": "Выравнивание текста внутри компонента. Значение по умолчанию - left."
        },
        "value": {
          "type": "string",
          "description": "Вводимое в поле ввода значение пользователем. Значение по умолчанию – «»"
        },
        "valueColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет вводимого в поле ввода значения. Значение по умолчанию – TextPrimary"
        },
        "valueTypography": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Типографика вводимого в поле ввода значения. Значение по умолчанию – ParagraphPrimaryMedium"
        },
        "placeholder": {
          "type": "string",
          "description": "Подсказка в поле ввода, пока значение не введено."
        },
        "placeholderColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет подсказки в поле ввода. Значение по умолчанию – TextColorSecondary"
        },
        "placeholderTypography": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Подсказка в поле ввода. Значение по умолчанию – ParagraphPrimaryMedium"
        },
        "showClearButton": {
          "$ref": "#/definitions/ShowClearButton",
          "description": "Поведение отображения иконки очистки. Где WhileEditing — иконка отображается только при наличии символов в поле Value и установленном фокусе, WhenNotEmpty — отображается толькопри наличии символов в поле Value, Always — отображается всегда и Never — иконка всегда скрыта. Значение по умолчанию – WhileEditing"
        },
        "clearButtonColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет иконки очистки. Значение по умолчанию – Translucent500"
        },
        "clearButtonLeftPadding": {
          "type": "integer",
          "description": "Левый отступ элемента ClearButton. Значение по умолчанию – 16"
        },
        "formatter": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Введённый текст, показанный в определённом форматировании или без него."
        },
        "cursorColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет курсора. Значение по умолчанию – neutral1300"
        },
        "keyboardSettings": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Настройки клавиатуры"
        },
        "numberOfLines": {
          "type": "integer",
          "description": "Максимальное количество строк контента, передаваемого в Value. Значение по умолчанию – 0, то есть «многострочный»."
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "TextView": {
      "type": "object",
      "properties": {
        "type": {
          "const": "TextView",
          "description": "Компонент TextView"
        },
        "leftText": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст слева"
        },
        "rightText": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Текст справа"
        },
        "padding": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Отступы"
        },
        "verticalAlignment": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Вертикальное выравнивание"
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Горизонтальное выравнивание"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "VerticalListWrapper": {
      "type": "object",
      "properties": {
        "type": {
          "const": "VerticalListWrapper",
          "description": "Компонент VerticalListWrapper"
        },
        "events": {
          "$ref": "#/definitions/AnyComponent",
          "description": "События, на которые мы можем навесить sdui экшены"
        },
        "childrenGap": {
          "type": "number",
          "default": 0,
          "description": "Размер отступа между элементами массива"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyComponent"
          },
          "description": "Массив дочерних элементов"
        },
        "childrenPaddings": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Контентный левый, верхний, правый и нижний паддинги вокруг массива. Значение по умолчанию - zero"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": true
    },
    "Preset": {
      "enum": [
        "custom",
        "emptyDefault",
        "emptyFilters",
        "emptySearch",
        "emptyNotFound",
        "errorNoInternet",
        "errorServerError",
        "errorDocument",
        "permissionCamera",
        "permissionLocation",
        "permissionBiometrics"
      ]
    },
    "Style": {
      "enum": [
        "fill",
        "stroke",
        "shadow"
      ]
    },
    "PageControlPosition": {
      "enum": [
        "top",
        "bottom",
        "topInside",
        "bottomInside",
        "none"
      ],
      "description": "Отображение Page Control: top - над контентом, bottom - под контентом, topInside - вверху контента (внутри), bottomInside - внизу контента (внутри), none - без элемента Page Control"
    },
    "Alignment": {
      "enum": [
        "start",
        "end"
      ]
    },
    "Size": {
      "enum": [
        "xSmall",
        "small",
        "medium",
        "large",
        "xLarge"
      ]
    },
    "Fill": {
      "enum": [
        "onComplete",
        "none"
      ]
    },
    "Direction": {
      "enum": [
        "clockwise",
        "clockOtherwise"
      ]
    },
    "CustomViewKey": {
      "enum": [
        "CardOrderSelf",
        "FinancialCalendar",
        "RotatableIconView",
        "DonutChart"
      ]
    },
    "VerticalAlignment": {
      "enum": [
        "leading",
        "center",
        "trailing"
      ]
    },
    "SnapPosition": {
      "enum": [
        "start",
        "center",
        "end"
      ]
    },
    "ContentPosition": {
      "enum": [
        "top",
        "bottom"
      ]
    },
    "Animation": {
      "enum": [
        "fade",
        "instant"
      ]
    },
    "Axis": {
      "enum": [
        "vertical",
        "horizontal"
      ]
    },
    "SizeMode": {
      "enum": [
        "square",
        "wide",
        "rectangle",
        "custom"
      ]
    },
    "IconShape": {
      "enum": [
        "noshape",
        "round"
      ]
    },
    "Icon": {
      "type": "object",
      "description": "Модель иконок для отображения в правом нижнем углу с цветом фона",
      "properties": {
        "icon": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Модель иконки"
        },
        "backgroundColor": {
          "$ref": "#/definitions/AnyComponent",
          "description": "Цвет фона, по умолчанию backgroundColorSecondary"
        }
      }
    },
    "Distribution": {
      "enum": [
        "default",
        "weighted"
      ]
    },
    "TransitionType": {
      "enum": [
        "push",
        "pushSlideIn",
        "moveOut",
        "moveOutSlideOut"
      ]
    },
    "ActionsViewPosition": {
      "enum": [
        "left",
        "hide",
        "right"
      ]
    },
    "ShowClearButton": {
      "enum": [
        "whileEditing",
        "whenNotEmpty",
        "always",
        "never"
      ]
    },
    "TextAlignment": {
      "enum": [
        "left",
        "leftTop"
      ]
    },
    "FocusMode": {
      "enum": [
        "auto",
        "forcedOn",
        "forcedOff"
      ]
    },
    "Spacing": {
      "type": "string",
      "enum": [
        "zero",
        "xxxxs",
        "xxxs",
        "xxs",
        "xs2xs",
        "xs",
        "xss",
        "s",
        "m",
        "l",
        "xl",
        "xxl",
        "xxxl",
        "xxxxl",
        "xxxxxl",
        "xxxxxxl",
        "horizontalMargin",
        "extendedHorizontalMargin"
      ],
      "description": "Токены отступов из дизайн-системы"
    },
    "Color": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^#[0-9a-fA-F]{6}$"
        },
        {
          "type": "string",
          "enum": [
            "textColorPrimary",
            "textColorPrimaryInverted",
            "textColorSecondary",
            "textColorSecondaryInverted",
            "textColorTertiary",
            "textColorTertiaryInverted",
            "textColorQuaternary",
            "textColorQuaternaryInverted",
            "textColorAccent",
            "textColorLink",
            "textColorLinkInverted",
            "textColorNegative",
            "textColorPositive",
            "textColorAttention",
            "textColorParagraph",
            "textColorParagraphInverted",
            "backgroundColorPrimary",
            "backgroundColorPrimaryInverted",
            "backgroundColorSecondary",
            "backgroundColorSecondaryInverted",
            "backgroundColorTertiary",
            "backgroundColorTertiaryInverted",
            "backgroundColorAccent",
            "backgroundColorComponent",
            "backgroundColorComponentInverted",
            "backgroundColorNegativeMuted",
            "backgroundColorPositiveMuted",
            "backgroundColorAttentionMuted",
            "backgroundColorInfoMuted",
            "backgroundColorLinkMuted",
            "backgroundColorNeutral",
            "borderColorPrimary",
            "borderColorPrimaryInverted",
            "borderColorSecondary",
            "borderColorSecondaryInverted",
            "borderColorTertiary",
            "borderColorTertiaryInverted",
            "borderColorAccent",
            "borderColorLink",
            "borderColorKey",
            "borderColorKeyInverted",
            "graphicColorPrimary",
            "graphicColorSecondary",
            "graphicColorTertiary",
            "graphicColorQuaternary",
            "clear",
            "staticGraphicColorBlueMaya",
            "staticGraphicColorRed",
            "staticGraphicColorGreen",
            "staticGraphicColorOrange",
            "staticGraphicColorPurple",
            "staticGraphicColorYellow"
          ]
        }
      ],
      "description": "Цвет из палитры или hex"
    },
    "Typography": {
      "type": "string",
      "enum": [
        "HeadlineXLarge",
        "HeadlineLarge",
        "HeadlineMedium",
        "HeadlineSmall",
        "HeadlineXSmall",
        "PromoXLarge",
        "PromoLarge",
        "PromoMedium",
        "PromoSmall",
        "PromoXSmall",
        "ParagraphPrimaryLarge",
        "ParagraphPrimaryMedium",
        "ParagraphPrimarySmall",
        "ParagraphSecondaryLarge",
        "ParagraphSecondaryMedium",
        "ParagraphSecondarySmall",
        "ParagraphComponent",
        "ParagraphComponentSecondary",
        "ParagraphTagline",
        "ParagraphCaps",
        "ActionPrimaryLarge",
        "ActionPrimaryMedium",
        "ActionPrimarySmall",
        "ActionSecondaryLarge",
        "ActionSecondaryMedium",
        "ActionSecondarySmall",
        "ActionComponent"
      ]
    },
    "Action": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "source": {},
        "version": {
          "type": "number"
        }
      }
    }
  }
}