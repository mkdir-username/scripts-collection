#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –≤–µ–¥—É—â–∏–π —Å–ª—ç—à –≤ file:/// —Å—Å—ã–ª–∫–∞—Ö
–ù–∞–ø—Ä–∏–º–µ—Ä: file:///Users/... -> file:////Users/... (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)
          file:///Users/... -> file:///Users/... (–ø—Ä–∞–≤–∏–ª—å–Ω–æ - –Ω–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è–µ–º)
          file://Users/...  -> file:///Users/... (–∏—Å–ø—Ä–∞–≤–ª—è–µ–º)
"""

import json
import re
from pathlib import Path
import sys


def fix_file(file_path: Path) -> int:
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫–∏ –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
            original = content

        # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        # file:///Users -> –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è file:///Users (3 —Å–ª—ç—à–∞ + /Users)
        # file://Users -> –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ file:///Users (2 —Å–ª—ç—à–∞ + Users -> 3 —Å–ª—ç—à–∞ + /Users)

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º file://Users –Ω–∞ file:///Users (–¥–æ–±–∞–≤–ª—è–µ–º —Å–ª—ç—à –ø–µ—Ä–µ–¥ Users)
        content = re.sub(
            r'"file://([^/][^"]+)"',  # file:// –∏ –¥–∞–ª–µ–µ –ù–ï —Å–ª—ç—à
            r'"file:///\1"',  # –¥–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ—Ç–∏–π —Å–ª—ç—à
            content
        )

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º file:///Users –Ω–∞ file:////Users (–µ—Å–ª–∏ –ø—É—Ç—å –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /)
        content = re.sub(
            r'"file:///([^/][^"]+)"',  # file:/// –∏ –¥–∞–ª–µ–µ –ù–ï —Å–ª—ç—à
            r'"file:////\1"',  # –¥–æ–±–∞–≤–ª—è–µ–º —á–µ—Ç–≤–µ—Ä—Ç—ã–π —Å–ª—ç—à
            content
        )

        # –¢–µ–ø–µ—Ä—å –∏—Å–ø—Ä–∞–≤–ª—è–µ–º file://// –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ file:///
        content = re.sub(
            r'"file:////([^"]+)"',
            r'"file:///\1"',
            content
        )

        if content != original:
            # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
            count = 0
            for match in re.finditer(r'"file://[^"]+', original):
                old_ref = match.group()
                if not old_ref.startswith('"file:///'):  # –µ—Å–ª–∏ –Ω–µ 3 —Å–ª—ç—à–∞
                    count += 1
                elif old_ref.startswith('"file:///') and not old_ref.startswith('"file:////'):
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –ø—É—Ç—å –ø–æ—Å–ª–µ file:/// —Å /
                    path_part = old_ref[10:]  # —É–±–∏—Ä–∞–µ–º "file:///
                    if path_part and not path_part.startswith('/'):
                        count += 1

            if count > 0:
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                return count

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {file_path}: {e}")

    return 0


def main():
    base_path = Path("/Users/username/Documents/front-middle-schema")

    total_fixed = 0
    files_fixed = 0

    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –ø—É—Ç–∏ –≤ file:/// —Å—Å—ã–ª–∫–∞—Ö...")
    print("   –ü–∞—Ç—Ç–µ—Ä–Ω: file://Users -> file:///Users")
    print("   –ü–∞—Ç—Ç–µ—Ä–Ω: file:///Users -> file:////Users")

    # –û–±—Ö–æ–¥–∏–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã
    for json_file in base_path.glob("**/*.json"):
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ
        if any(part.startswith('.') for part in json_file.parts):
            continue

        fixed = fix_file(json_file)
        if fixed > 0:
            rel_path = json_file.relative_to(base_path)
            print(f"  ‚úÖ {rel_path}: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed} —Å—Å—ã–ª–æ–∫")
            total_fixed += fixed
            files_fixed += 1

    print(f"\nüìä –ò—Ç–æ–≥–æ:")
    print(f"  - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {total_fixed}")
    print(f"  - –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {files_fixed}")

    if total_fixed == 0:
        print("\n‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")


if __name__ == "__main__":
    main()